// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly: default 1`] = `
<ContextNavBar
  height={72}
  id="context-navigation"
  notif={<React.Fragment />}
>
  <div
    className="display-flex-center display-flex-space-between padded-bottom little-padded-top"
  >
    <withCurrentUserContext(Component)
      branchLikes={Array []}
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
    />
    <withCurrentUserContext(HeaderMeta)
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      onWarningDismiss={[MockFunction]}
      warnings={Array []}
    />
  </div>
  <withAppStateContext(Menu)
    branchLikes={Array []}
    component={
      Object {
        "breadcrumbs": Array [
          Object {
            "key": "foo",
            "name": "Foo",
            "qualifier": "TRK",
          },
        ],
        "key": "my-project",
        "name": "MyProject",
        "qualifier": "TRK",
        "qualityGate": Object {
          "isDefault": true,
          "key": "30",
          "name": "Sonar way",
        },
        "qualityProfiles": Array [
          Object {
            "deleted": false,
            "key": "my-qp",
            "language": "ts",
            "name": "Sonar way",
          },
        ],
        "tags": Array [],
      }
    }
    isInProgress={false}
    isPending={false}
    onToggleProjectInfo={[Function]}
  />
  <InfoDrawer
    displayed={false}
    onClose={[Function]}
    top={120}
  >
    <withCurrentUserContext(withMetricsContext(ProjectInformation))
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      onComponentChange={[MockFunction]}
    />
  </InfoDrawer>
</ContextNavBar>
`;

exports[`renders correctly: has failed notification 1`] = `
<ContextNavBar
  height={102}
  id="context-navigation"
  notif={
    <React.Fragment>
      <withRouter(ComponentNavBgTaskNotif)
        component={
          Object {
            "breadcrumbs": Array [
              Object {
                "key": "foo",
                "name": "Foo",
                "qualifier": "TRK",
              },
            ],
            "key": "my-project",
            "name": "MyProject",
            "qualifier": "TRK",
            "qualityGate": Object {
              "isDefault": true,
              "key": "30",
              "name": "Sonar way",
            },
            "qualityProfiles": Array [
              Object {
                "deleted": false,
                "key": "my-qp",
                "language": "ts",
                "name": "Sonar way",
              },
            ],
            "tags": Array [],
          }
        }
        currentTask={
          Object {
            "analysisId": "x123",
            "componentKey": "foo",
            "componentName": "Foo",
            "componentQualifier": "TRK",
            "id": "AXR8jg_0mF2ZsYr8Wzs2",
            "status": "FAILED",
            "submittedAt": "2020-09-11T11:45:35+0200",
            "type": "REPORT",
          }
        }
        isInProgress={false}
        isPending={false}
      />
    </React.Fragment>
  }
>
  <div
    className="display-flex-center display-flex-space-between padded-bottom little-padded-top"
  >
    <withCurrentUserContext(Component)
      branchLikes={Array []}
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
    />
    <withCurrentUserContext(HeaderMeta)
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      onWarningDismiss={[MockFunction]}
      warnings={Array []}
    />
  </div>
  <withAppStateContext(Menu)
    branchLikes={Array []}
    component={
      Object {
        "breadcrumbs": Array [
          Object {
            "key": "foo",
            "name": "Foo",
            "qualifier": "TRK",
          },
        ],
        "key": "my-project",
        "name": "MyProject",
        "qualifier": "TRK",
        "qualityGate": Object {
          "isDefault": true,
          "key": "30",
          "name": "Sonar way",
        },
        "qualityProfiles": Array [
          Object {
            "deleted": false,
            "key": "my-qp",
            "language": "ts",
            "name": "Sonar way",
          },
        ],
        "tags": Array [],
      }
    }
    isInProgress={false}
    isPending={false}
    onToggleProjectInfo={[Function]}
  />
  <InfoDrawer
    displayed={false}
    onClose={[Function]}
    top={120}
  >
    <withCurrentUserContext(withMetricsContext(ProjectInformation))
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      onComponentChange={[MockFunction]}
    />
  </InfoDrawer>
</ContextNavBar>
`;

exports[`renders correctly: has failed project binding 1`] = `
<ContextNavBar
  height={102}
  id="context-navigation"
  notif={
    <React.Fragment>
      <ComponentNavProjectBindingErrorNotif
        component={
          Object {
            "breadcrumbs": Array [
              Object {
                "key": "foo",
                "name": "Foo",
                "qualifier": "TRK",
              },
            ],
            "key": "my-project",
            "name": "MyProject",
            "qualifier": "TRK",
            "qualityGate": Object {
              "isDefault": true,
              "key": "30",
              "name": "Sonar way",
            },
            "qualityProfiles": Array [
              Object {
                "deleted": false,
                "key": "my-qp",
                "language": "ts",
                "name": "Sonar way",
              },
            ],
            "tags": Array [],
          }
        }
      />
    </React.Fragment>
  }
>
  <div
    className="display-flex-center display-flex-space-between padded-bottom little-padded-top"
  >
    <withCurrentUserContext(Component)
      branchLikes={Array []}
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
    />
    <withCurrentUserContext(HeaderMeta)
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      onWarningDismiss={[MockFunction]}
      warnings={Array []}
    />
  </div>
  <withAppStateContext(Menu)
    branchLikes={Array []}
    component={
      Object {
        "breadcrumbs": Array [
          Object {
            "key": "foo",
            "name": "Foo",
            "qualifier": "TRK",
          },
        ],
        "key": "my-project",
        "name": "MyProject",
        "qualifier": "TRK",
        "qualityGate": Object {
          "isDefault": true,
          "key": "30",
          "name": "Sonar way",
        },
        "qualityProfiles": Array [
          Object {
            "deleted": false,
            "key": "my-qp",
            "language": "ts",
            "name": "Sonar way",
          },
        ],
        "tags": Array [],
      }
    }
    isInProgress={false}
    isPending={false}
    onToggleProjectInfo={[Function]}
  />
  <InfoDrawer
    displayed={false}
    onClose={[Function]}
    top={120}
  >
    <withCurrentUserContext(withMetricsContext(ProjectInformation))
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      onComponentChange={[MockFunction]}
    />
  </InfoDrawer>
</ContextNavBar>
`;

exports[`renders correctly: has in progress notification 1`] = `
<ContextNavBar
  height={102}
  id="context-navigation"
  notif={
    <React.Fragment>
      <withRouter(ComponentNavBgTaskNotif)
        component={
          Object {
            "breadcrumbs": Array [
              Object {
                "key": "foo",
                "name": "Foo",
                "qualifier": "TRK",
              },
            ],
            "key": "my-project",
            "name": "MyProject",
            "qualifier": "TRK",
            "qualityGate": Object {
              "isDefault": true,
              "key": "30",
              "name": "Sonar way",
            },
            "qualityProfiles": Array [
              Object {
                "deleted": false,
                "key": "my-qp",
                "language": "ts",
                "name": "Sonar way",
              },
            ],
            "tags": Array [],
          }
        }
        isInProgress={true}
        isPending={false}
      />
    </React.Fragment>
  }
>
  <div
    className="display-flex-center display-flex-space-between padded-bottom little-padded-top"
  >
    <withCurrentUserContext(Component)
      branchLikes={Array []}
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
    />
    <withCurrentUserContext(HeaderMeta)
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      onWarningDismiss={[MockFunction]}
      warnings={Array []}
    />
  </div>
  <withAppStateContext(Menu)
    branchLikes={Array []}
    component={
      Object {
        "breadcrumbs": Array [
          Object {
            "key": "foo",
            "name": "Foo",
            "qualifier": "TRK",
          },
        ],
        "key": "my-project",
        "name": "MyProject",
        "qualifier": "TRK",
        "qualityGate": Object {
          "isDefault": true,
          "key": "30",
          "name": "Sonar way",
        },
        "qualityProfiles": Array [
          Object {
            "deleted": false,
            "key": "my-qp",
            "language": "ts",
            "name": "Sonar way",
          },
        ],
        "tags": Array [],
      }
    }
    isInProgress={true}
    isPending={false}
    onToggleProjectInfo={[Function]}
  />
  <InfoDrawer
    displayed={false}
    onClose={[Function]}
    top={120}
  >
    <withCurrentUserContext(withMetricsContext(ProjectInformation))
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      onComponentChange={[MockFunction]}
    />
  </InfoDrawer>
</ContextNavBar>
`;

exports[`renders correctly: has pending notification 1`] = `
<ContextNavBar
  height={102}
  id="context-navigation"
  notif={
    <React.Fragment>
      <withRouter(ComponentNavBgTaskNotif)
        component={
          Object {
            "breadcrumbs": Array [
              Object {
                "key": "foo",
                "name": "Foo",
                "qualifier": "TRK",
              },
            ],
            "key": "my-project",
            "name": "MyProject",
            "qualifier": "TRK",
            "qualityGate": Object {
              "isDefault": true,
              "key": "30",
              "name": "Sonar way",
            },
            "qualityProfiles": Array [
              Object {
                "deleted": false,
                "key": "my-qp",
                "language": "ts",
                "name": "Sonar way",
              },
            ],
            "tags": Array [],
          }
        }
        isInProgress={false}
        isPending={true}
      />
    </React.Fragment>
  }
>
  <div
    className="display-flex-center display-flex-space-between padded-bottom little-padded-top"
  >
    <withCurrentUserContext(Component)
      branchLikes={Array []}
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
    />
    <withCurrentUserContext(HeaderMeta)
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      onWarningDismiss={[MockFunction]}
      warnings={Array []}
    />
  </div>
  <withAppStateContext(Menu)
    branchLikes={Array []}
    component={
      Object {
        "breadcrumbs": Array [
          Object {
            "key": "foo",
            "name": "Foo",
            "qualifier": "TRK",
          },
        ],
        "key": "my-project",
        "name": "MyProject",
        "qualifier": "TRK",
        "qualityGate": Object {
          "isDefault": true,
          "key": "30",
          "name": "Sonar way",
        },
        "qualityProfiles": Array [
          Object {
            "deleted": false,
            "key": "my-qp",
            "language": "ts",
            "name": "Sonar way",
          },
        ],
        "tags": Array [],
      }
    }
    isInProgress={false}
    isPending={true}
    onToggleProjectInfo={[Function]}
  />
  <InfoDrawer
    displayed={false}
    onClose={[Function]}
    top={120}
  >
    <withCurrentUserContext(withMetricsContext(ProjectInformation))
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      onComponentChange={[MockFunction]}
    />
  </InfoDrawer>
</ContextNavBar>
`;

exports[`renders correctly: has warnings 1`] = `
<ContextNavBar
  height={72}
  id="context-navigation"
  notif={<React.Fragment />}
>
  <div
    className="display-flex-center display-flex-space-between little-padded-bottom"
  >
    <withCurrentUserContext(Component)
      branchLikes={Array []}
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
    />
    <withCurrentUserContext(HeaderMeta)
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      onWarningDismiss={[MockFunction]}
      warnings={
        Array [
          Object {
            "dismissable": false,
            "key": "foo",
            "message": "Lorem ipsum",
          },
        ]
      }
    />
  </div>
  <withAppStateContext(Menu)
    branchLikes={Array []}
    component={
      Object {
        "breadcrumbs": Array [
          Object {
            "key": "foo",
            "name": "Foo",
            "qualifier": "TRK",
          },
        ],
        "key": "my-project",
        "name": "MyProject",
        "qualifier": "TRK",
        "qualityGate": Object {
          "isDefault": true,
          "key": "30",
          "name": "Sonar way",
        },
        "qualityProfiles": Array [
          Object {
            "deleted": false,
            "key": "my-qp",
            "language": "ts",
            "name": "Sonar way",
          },
        ],
        "tags": Array [],
      }
    }
    isInProgress={false}
    isPending={false}
    onToggleProjectInfo={[Function]}
  />
  <InfoDrawer
    displayed={false}
    onClose={[Function]}
    top={120}
  >
    <withCurrentUserContext(withMetricsContext(ProjectInformation))
      component={
        Object {
          "breadcrumbs": Array [
            Object {
              "key": "foo",
              "name": "Foo",
              "qualifier": "TRK",
            },
          ],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      onComponentChange={[MockFunction]}
    />
  </InfoDrawer>
</ContextNavBar>
`;
